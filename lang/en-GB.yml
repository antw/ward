---

  generic:
    inclusive_conjunction: 'and'
    exclusive_conjunction: 'or'
    list_seperator:        ','

  acceptance:
    positive: '%{context} should be accepted'
    negative: '%{context} should not be accepted'

  close_to:
    positive: '%{context} should be within %{delta} of %{expected}'
    negative: '%{context} should not be within %{delta} of %{expected}'

  equal_to:
    positive: '%{context} should be %{expected}'
    negative: '%{context} should not be %{expected}'

  exclude:
    positive: '%{context} should not be one of %{expected}'
    negative: '%{context} should be one of %{expected}'

  has:
    eql:
      positive: '%{context} should have %{expected} %{collection}'
      negative: '%{context} should not have %{expected} %{collection}'
    lte:
      positive: '%{context} should have at most %{expected} %{collection}'
      negative: '%{context} should not have at most %{expected} %{collection}'
    gte:
      positive: '%{context} should have at least %{expected} %{collection}'
      negative: '%{context} should not have at least %{expected} %{collection}'
    between:
      positive: '%{context} should have between %{lower} and %{upper} %{collection}'
      negative: '%{context} should not have between %{lower} and %{upper} %{collection}'

  include:
    positive: '%{context} should be one of %{expected}'
    negative: '%{context} should not be one of %{expected}'

  match:
    positive: '%{context} format was invalid'
    negative: '%{context} format was invalid'

  nil:
    positive: '%{context} should be nil'
    negative: '%{context} should not be nil'

  present:
    positive: '%{context} should be present'
    negative: '%{context} should not be present'
